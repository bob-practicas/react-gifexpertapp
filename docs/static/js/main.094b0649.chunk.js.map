{"version":3,"sources":["components/AddCategory.js","helpers/getGits.js","components/GifGridItem.js","components/GiGrid.js","hooks/useFetchGift.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","valueInput","setValueInput","onSubmit","e","preventDefault","cate","value","onChange","target","getGift","category","a","url","encodeURI","fetch","gif","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","GiGrid","loading","state","setstate","useEffect","setTimeout","then","useFetchGift","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAmB9C,OAEQ,0BAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEFN,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACvCJ,EAAc,MAQN,2BACIK,MAAQN,EACRO,SApBU,SAACJ,GAEvBF,EAAcE,EAAEK,OAAOF,Y,uBCRjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEFI,MAAMF,GAFJ,cAEdG,EAFc,gBAGCA,EAAIC,OAHL,uBAGbC,EAHa,EAGbA,KAQDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAftB,kBAmBbM,GAnBa,4CAAH,sDCARO,EAAc,SAAEC,GAIzB,OACI,yBAAKC,UAAU,QACZ,yBAAKC,IAAMF,EAAMd,MACjB,+BAAMc,EAAMJ,SCFVO,EAAS,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAY,IAAD,EAEbX,mBAAS,CAC/BkB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAuBvC,OAfAC,qBAAU,WAENC,YAAW,WAEPzB,EAAQC,GACPyB,MAAK,SAAAf,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,OACL,CAACpB,IAGIqB,EDlBqBK,CAAa1B,GAA9BO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAIb,OACI,oCACA,4BAAKpB,GAEHoB,GAAW,gDAEb,yBAAKH,UAAU,aAEPV,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEnBfkB,EAAe,WAAO,IAAD,EAGMvC,mBAAS,CAAC,YAHhB,mBAGvBwC,EAHuB,KAGXzC,EAHW,KAW9B,OACI,oCACI,+CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAMA,4BAEQyC,EAAWpB,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACA2B,IAAM3B,EACNA,SAAWA,U,MCxBlC8B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.094b0649.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport  PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [valueInput, setValueInput] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n\r\n        setValueInput(e.target.value);\r\n        \r\n    }\r\n    \r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log('Submit echo')\r\n        setCategories( cate => [valueInput, ...cate ]);\r\n        setValueInput('');\r\n\r\n    }\r\n\r\n    return (\r\n    \r\n            <form onSubmit={ handleSubmit }>\r\n\r\n                <input\r\n                    value={ valueInput }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n            </form>\r\n       \r\n    )\r\n}\r\n\r\n\r\n AddCategory.propTypes = {\r\n     setCategories: PropTypes.func.isRequired\r\n }\r\n\r\n","\r\n\r\nexport const  getGift = async ( category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=5&api_key=DIMpf0hjnFzWymqN3Q7fanL45xn8GY5W&`\r\n    const gif = await fetch(url);\r\n    const {data} = await gif.json();\r\n\r\n    \r\n\r\n    // console.log(data)\r\n\r\n    // console.log(imagenes)\r\n\r\n    const gift = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gift;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card\">\r\n           <img src={ props.url } />\r\n           <p> { props.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGift'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { GifExpertApp } from '../GifExpertApp';\r\n// import { GifGridItem } from './GifGridItem';\r\n//  import { getGift } from '../helpers/getGits';\r\n\r\nexport const GiGrid = ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGift(category);\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3> \r\n        \r\n        { loading && <p>cargando gif ... </p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                data.map(img =>(\r\n                    <GifGridItem\r\n                        key={ img.id}\r\n                        {...img }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n     \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGits\";\r\n\r\n\r\nexport const useFetchGift =(category)=>{\r\n\r\nconst [state, setstate] = useState({\r\n    data: [],\r\n    loading: true \r\n});\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    setTimeout(() => {\r\n        \r\n        getGift(category)\r\n        .then(img=>{\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            })\r\n        })\r\n    }, 3000);\r\n},[category])\r\n\r\n\r\nreturn state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiGrid } from './components/GiGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Pokemon'])\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories, 'Goku']);\r\n    // }\r\n    \r\n  \r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            \r\n            {/* <button\r\n            onClick={ handleAdd }\r\n            >Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                       <GiGrid \r\n                       key={ category}\r\n                       category={ category } />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}